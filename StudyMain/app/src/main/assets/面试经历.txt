作者：wustor
链接：https://www.jianshu.com/p/91718de18979
來源：简书
简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。


1,TabLayout如何设置指示器的宽度包裹内容？
    Tablayout 继承自 HorizontalScrollView，用作页面切换指示器.
    问题分析： 原生TabLayout的指示器宽度等于每个tab的宽度，远大于 tab内文字标题的宽度
    那么我们可以通过反射获取Tablayout的mTabStrip，循环获取到子view，设置leftMargin，rightMargin就可以压缩tab的宽度了。
    https://www.jianshu.com/p/fde38f367019

公差为1的等差数列求和，如何优化
    for循环求值
    前n项和公式为：Sn=a1*n+[n*(n-1)*d]/2


自己的优势在哪里？


2，注解如何获取，反射为何耗性能？

        反射概念;JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。
        java反射之所以慢，最主要的就是就是编译器没法对反射相关的代码做优化.
        其实慢的原因还有安全检查，访问控制等,使用名字去查找对应方法等

3，Java的GC机制，分代回收策略
    java垃圾回收算法实现原理，有两种，一个是引用计数法，一个是引用可达法。
    垃圾回收算法有3种：
            1.标记清除
            2.复制清除
            3.标记整理
    java内存模型将内存区域分为，
        新生代：
        老年代：
        永久代：
    JVM有个叫做“安全点”和“安全区域”的东西，在发生GC时，所有的线程都会执行到“安全点”停下来。
    在需要GC的时候，JVM会设置一个标志，当线程执行到安全点的时候会轮询检测这个标志，如果发现需要GC，则线程会自己挂起，直到GC结束才恢复运行。
    安全区域是一段代码段，在这段代码段中对象的引用关系不会发生变化


4，Binder机制：ServiceManager 什么时候注册的？
    在init进程启动的过程中会去解析init.rc文件,然后启动 ServiceManager
    ServiceManager 和 zygote 一样，是由init 进程创建，Service manager是管理 SystemServer（AMS，WMS，PMS） 的一个进程
    zygote 启动 SystemServer
    Android系统进程间通信机制Binder的总体架构由Client、Server、ServiceManager 和驱动程序 Binder 四个组件构成

    servicemanager:启动 Binder IPC,管理所有的 Android 系统服务。ServiceManager是一个守护进程，负责管理Server并向Client提供查询Server的功能。
    内部维护一个list来记录已经注册的所有的service，统一管理，向Client提供查询服务。


7，int,long的取值范围以及BigDecimal，数值越界了如何处理？
    基本类型：int 二进制位数：32
    最小值：Integer.MIN_VALUE= -2147483648 （-2的31次方）
    最大值：Integer.MAX_VALUE= 2147483647  （2的31次方-1）

    基本类型：long 二进制位数：64
    最小值：Long.MIN_VALUE=-9223372036854775808 （-2的63次方）
    最大值：Long.MAX_VALUE=9223372036854775807 （2的63次方-1）

    强制转换是取低位字节（补码，反码，原码），内存中存储的是补码。

ConcurrentHashMap的原理，分的段数是多少？
    锁分段，并发级别为默认值16，也就是段的个数。

APP是如何适配的？
    https://blog.csdn.net/zhaokaiqiang1992/article/details/45419023

Android中如何查看一个对象的回收情况？
    使用AndroidProfile 的内存 工具，Dump Java Heap  ，
    会抓取 10秒的 堆内存信息，然后自动翻译显示成可查看的格式，可以按照包名来展示
    Java对象执行了 finalize() 方法(进程退出，都不一样会执行gc)

最大一次线上Bug处理措施



MVP如何管理Presenter的生命周期，何时取消网络请求
1，Application 类管理Presenter的生命周期
2，Loader 类 管理Presenter的生命周期,解决跨 configuration 的数据缓存和持久化问题，其不受设备横竖屏切换影响

高级MVP框架
1, Presenter 的生命周期控制：
 （ Beam 框架：Presenter 与 Activity 的绑定关系应由静态类管理，而不是由 Activity 管理。
      当 Activity 意外重启时 Presenter 不应重启，只需在 Activity 重启时，
      让 Presenter 与 Activity 重新绑定，并根据数据恢复 Activity 状态即可。
      而当 Activity 真正销毁时，对应 Presenter 才应该跟随销毁。  ）
2, RxJava 在MVP中的运用（ 图片id — 子线程获取bitmap - ui线程展示  ）



用过的框架及原理
天猫的 Tangram 布局(  七巧板布局 )，vLayout原理
        天猫团队开源跨平台模块化 UI 界面开发框架 Tangram
屏幕旋转


APP的启动流程
回形打印二维数组
Java为何引入泛型，泛型边界  //  泛型的好处是在编译的时候检查类型安全，保证参数类型一致性；
            Java泛型中重用extend关键字，限制泛型的边界，占位符可以extends（super）单个类多接口；通配符被限制为单一边界。
常见的Java数据结构
ArrayMap跟SparseArray在HashMap上面的改进
Java的四种引用及使用场景
Webview性能优化

listview和recyclerview和Scrollview嵌套问题，以及rv和lv的区别
listview  recycleview 区别
        1)RecyclerView和listview缓存机制的不同:ListView两级缓存，缓存的是view；RecyclerView四级缓存，缓存的是RecyclerView.ViewHolder
        2)RecyclerView 解耦彻底，重在复用，能实现多重布局，

ViewHolder设计模式： 直接缓存各种view的集合类


14.Android2个虚拟机的区别（一个5.0之前，一个5.0之后）
Dalvik虚拟机：
Art虚拟机：应用安装时在应用安装的时候就预编译字节码到机器语言，启动快，运行流畅

Binder机制
ClassLoader的理解 。 2种ClassLoader， https://juejin.im/post/5a28e7e86fb9a045117105c3
Arouter的原理（ 适合在组件化中路由）
组件化原理，组件化中路由的实现
热修复跟插件化的原理
线程池的几个参数的理解，四种线程池的使用场景
常用的设计模式，手写DCL单例模式（Double check the lock）
进程间为什么不能直接进行通信？ ：安全性的考虑，应用所在的内存是独立的，无法相互访问，各个应用的数据都在自己的内存中。
应用跟系统之间通信什么时候用Socket什么时候用Binder

Android的Hook,插桩技术
    总结一下：
    Hook 的选择点：静态变量和单例，因为一旦创建对象，它们不容易变化，非常容易定位。
    Hook 过程：
        寻找 Hook 点，原则是静态变量或者单例对象，尽量 Hook public 的对象和方法。
        选择合适的代理方式，如果是接口可以用动态代理。
        偷梁换柱——用代理对象替换原始对象。

反射 3部曲

1，获取这个类的 Class对象
2，调用 Class对象的 getMethod方法，返回一个Method对象或者 getDeclaredField返回 属性
3，使用 Method对象 的  invoke 方法进行反射调用，普通方法 invoke（对象），静态方法 invoke（null）

单例模式 反射安全：在构造函数中抛出异常

Android开发中反射举例：  TabLayout的使用，下划线宽度需要自定义宽度时需要反射





Debug跟Release的APK的区别(  打包参数优化，签名，混淆 )
软引用跟弱引用的区别
ConcurrentHashmap的原理
Listview跟Recyclerview的区别（刷新，缓存，各自的使用场景）
对谷歌新推出的Room架构
动画的两种实现：setX跟setTranslationX区别
事件分发：Activity跟window依次到viewgroup
Volley源码，优缺点?  Volley把数据先读到（下载）内存中再传输，如果数据大内存会爆炸
Picasso传入的Activity跟Application的context的区别  // 上下文默认会获取全局ApplicationContext,即使传递的是activity,也会去获取全局Application.
快速排序


数据库的升级，表结构的修改
常见的排序算法，手写二分查找，二分查找的复杂度分析
点击APP图标启动APP的大致流程
SplashActivity中进行初始化MainActivity的参数，Splash没有初始化，AMS直接启动了MainActivity怎么办
设计一个多线程，可以同时读，读的时候不能写，写的时候不能读(读写锁)
设计断点续传，如何判断服务端是否支持断点续传
Binder机制：Binder内核所在的进程是如何找到到Server跟Client进行通信的
对JNI是否了解
组件化的原理，组件间通信


GitHub上面的开源项目
一个线程能否创建多个Handler，Handler跟Looper之间的对应关系
ArrayList跟HashMap是够线程安全，如何保证线程安全
Volley返回数据量比较大的请求时怎么办
ListView跟RecyclerView刷新数据原理，使用到的设计模式
适配如何做，有没有适配过全面屏( 虚拟导航按钮，宽高比 )
Fragment跟Activity的通信方式，你知道几种？


从长度为m的int数组中随机取出n个元素，每次取的元素都是之前未取过的，如何优化?( Set的集合里不允许对象有重复的值 )

https是如何保证安全的，证书如何校验
Android的签名机制，APK包含哪些东西
    如何判断证书是否有效（读取公钥，公钥解密对比签名是否正确， ）
    如何判断APK是否被更改（对APK中所有文件内容分别进行Hash计算，将结果的BASE64编码和MANIFEST.MF里的相应内容进行比较，全部相同则APK的内容未被更改）
    如何防范被重新签名（程序中对签名自行验证，可配合服务端进行）
是否遇到过OOM，如何解决（leakCanary ）
是否做过逆向
对JNI了解多少
手写单例(DCL)
是否写过so文件
热修复原理，如何进行dex替换的（ 分成多个dex包， 合并补丁包形成新包，使用 DexClassLoader 加载新包 ）


简单说下项目
内存泄露，如何检测以及检测的原理
点击Launcher跟点击微信支付启动微信有什么区别
逆序一个字符串，不能调用String的reverse方法(考察编码风格)
组件化原理，模块化机制
没有给权限如何定位，特定机型定位失败，如何解决
同步跟异步机制(是业务上的，不知道他想问什么)
线程池中核心线程数跟最大线程数如何定义
        如果是CPU密集型应用，则线程池大小设置为N+1
        如果是IO密集型应用，则线程池大小设置为2N+1
权限适配



StringBuffer跟StringBuilder之间的区别：StringBuilder（不是线程安全的）
并发相关，各种锁
View的绘制流程，事件分发
Hashmap,Arraymap，SparseArray

sparearray原理

四种引用
MVP跟MVC的区别
LV跟RV之间的区别
Service相关，startService以及bindService
Fragment不同于Activity的生命周期
生产者消费者问题：一对多，多对多情况
常见的设计模式，并选择一种描述一下
Scroller的使用



Gradle生命周期
Java&Android关于Classloader源码解析
Python的class文件
DCL中Volatile的作用，如何防止反射实例化单例对象
抽象类能否实例化，理论依据是什么？
如何通过Gradle配置差异较大(20%差异)的多渠道包
class文件如何转化成dex
Service先start再bind如何关闭service，为什么bindService可以跟Activity生命周期联动？
JVM相关,DVM以及ART是如何进行优化的，具体步骤
长连接常见的库，短链接
静态同步锁与普通同步锁的区别
直接在Activity中创建一个thread跟在service中创建一个thread之间恩区别



View的生命周期
View的绘制流程跟事件分发
Activity跟Window之间的关系
对C跟JNI是否熟悉
热修复原理，插件化是如何进行加载插件的
Java中的锁，各种同步方式之间的区别
ANR在四大组件中的时间，场景
OOM，如何避免
内存泄露原理，如何避免
MVC跟MVP之间的区别
ListView针对多种item的缓存是如何实现的
Android绘制二维跟三维的View的区别
是否了解硬件加速
ListView是如何实现对不同type的item的管理的

Android中IPC方式，各种方式优缺点，为什么选择用Binder
主流的热修复框架流派，原理，是否研究过classloader源码
Android为什么要设计两种classloader，为什么不用一种，通过type来区分
Bundle传递数据为什么需要序列化
手写一个快排，分析原理
广播传输的数据是否有限制，是多少，为什么要限制？
Activity启动时生命周期是如何回调的？
MVP.MVC.MVVM之间对比分析
组件化通讯:有几种通信方式，Arouter原理
插件化加载流程，原理
关于反射混淆，耗性能的解决方式
天猫七巧板布局原理
热修复流派，原理



RecyclerView的itemdecoration如何处理点击事件
单例模式如何修改数据
android事件传递，非常细
多线程


JVM内存分布，Classloader
静态代理跟动态代理
线程的生命周期
是否用过DataBinding
是否接触过JNI
对热修复跟插件化了解多少
对RN了解多少
二分查找
说下多态
编译期注解跟运行时注解
线程跟进程间通信
Android中的IPC
java中的传递
equals跟==
Picasso的存储
项目中的难点
项目中用到了哪些第三方
MVC,MVVM,Clean架构
抽象类跟接口的区别，接口的默认修饰符



 Canvas.save()跟Canvas.restore()的调用时机
程序A能否接收到程序B的广播？接入微信支付的时候，微信是如何跟当前程序进行通信？
对Java.nio了解多少
ConcurrentHashMap是如何实现分段锁？
现在需要遍历SD卡下所有的文件打印出后缀名为.txt文件名称，如何提高时间效率？
为什么复写equals方法的同时需要复写hashcode方法，前者相同后者是否相同，反过来呢？为什么？（    hashcode，hashmap ）
Android4.0～8.0之间大的变化，如何处理？
说一下 Measurespec 这个类
ViewHolder 有什么用？
Gradle的Flavor能否配置sourceset？
线程池核心线程数一般定义多少，为什么？
Intentservice 有什么用
弱引用什么时候被回收
Android中提供了哪些类来帮忙处理线程
http的状态码，常见的请求头，http缓存协议https如何加密
多进程的优缺点，多线程的优缺点
热修复如何修复资源文件？
有没有遇到64k问题，为什么，如何解决？
httpUrlconnection跟httpClient有什么区别



两个非基本数据类型数组：
array1=[x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,×11]
array2=[x6,x3,x10,x5]
计算结果：[x6,x7,x8,x9,x1,x2,x3,x4,x10,x11,x5],写出你的算法
类的初始化过程
点击事件穿透原则
线程池使用的是哪一种，使用原则
LeakedCanary原理
LinerLayout跟RelativeLayout的绘制原理
Android新版本的一些新特性6.0,7.0,8.0
类的初始化顺序依次是（静态变量、静态代码块）>（变量、代码块）>构造方法


看了看项目提了问题如何进行优化
如何实现马蜂窝中的一个动画效果
软键盘顶起布局
组件化通信方案


聊聊RecyclerView，动画，缓存，数据绑定底层是如何实现的。
聊了聊我的开源项目实现原理
View在屏幕中的移动底层是如何实现的
Binder跟Socket之间的区别，什么时候用哪一个，Binder的底层实现
Activity,Window跟View之间的关系
setContentView都干了啥
Activity的启动模式
MVC跟MVP之间的区别
算法：将一个有序数组去重得到一个新数组(空间复杂度为O(N))


LruCache底层实现
Hashmap的hash算法
Bitmap在decode的时候申请的内存如何复用，释放时机
注解如何实现一个findViewById
Android是如何学习的
sycronized关键字的类锁对象锁，如何保证线程安全？
重入锁跟sycronized关键字之间的区别
除了notify还有什么别的方式可以唤醒线程
说说你对Context的理解

Listview的adapter是什么adapter，如何复用。
RV是如何布局的
算法：如何从1T的无序数组(长度为n)里面找出前k大的数据，复杂度要求为O(logN)
由A启动BActivity，A为栈内复用模式，B为标准模式，然后再次启动A或者杀死B，说说A，B的生命周期变化，为什么



.APP启动流程
2.Webview内存泄露
3.组件间通信，如何传递对象
4.Arouter原理
5.如何取消一个网络请求
6.两个activity之间来回切换的生命周期变化
7.进程间如何通信，Binder机制
8.内存泄露及优化
9.自定义view以及事件冲突
10.线程池参数及定义，多线程是否一定会高效
11.电量优化


请例举Android中常用布局类型，并简述其用法以及排版效率
区别Animation和Animator的用法，概述其原理
Thread,Looper，MessageQueue，Handler，Message每个类的功能以及这些类之间的关系
如何加载NDK库？如何在jni中注册native函数，有几种注册方法？
操作系统中进程和线程有什么联系和区别？系统会在什么情况下会在用户态好内核态中切换。
如果一个APP里面有多进程存在，请列举你所知道的全部IPC方法
请画出MVC、MVP模式的差异
对于Android APP闪退，可能的原因有哪些？请针对每种情况简述分析过程。


listview跟recyclerview之间的区别，然后上拉加载的时候分别应该如何处理
项目中用过哪些技术
同步普通方法跟static方法之间的区别
不用锁如何保证int自增安全
内存为什么会发生泄露
做过的性能优化，原理
DVK跟JVM之间的区别
有没有diss过产品经理
平时看什么书  ； 蔡康永的说话之道
为什么学python
项目中用到过哪些技术
期望在项目中扮演什么样的角色


Sycronized原理
ReentrantLock原理
静态内部类为什么能保证单例，JVM是如何实现的
ART跟DVM做了哪些优化
View是如何绘制到屏幕上的
写一个快排，有时间限制
二面面试官问地特别深，一上来就是各种原理
问了很多原理的原理，比如说Sycronized原理，View如何绘制到屏幕上去，这些对于我来说确实比较难，然后还问到了AQS, CAS的底层实现，答地一般般，我基本上对于JMM的了解就是类锁对象锁，指令重排序等


三面


GitHub上的开源项目是如何实现的
未来的职业规划
遇到问题如何解决
为什么没有自己搭建SS
三面是猎豹移动的产品总监，没有问技术上的问题，基本上如实回答就行了，没有那么多的套路，真诚即可。


自己带电脑，他们提供一个接口，实现一个瀑布流，需要考虑动画，内存管理等
 深拷贝浅拷贝
输出一个集合{A,B,C,D}的全部子集
自定义View及注意事项
如何自动化部署打包发包流程
JNI是否了解过
内存回收
classloader
对热修复以及插件化了解多少
微信支付宝支付调用时上层是如何封装AIDL的
如何给一个app瘦身


如何实现一个推送，极光推送原理
说说Http协议，以及Tcp/Udp
常见的设计模式，如何实现一个观察者模式，如果需要有序通知观察者，该如何操作
实现一个图片加载框架应该考虑哪些
线程池有哪些参数，应该如何设计
性能优化是如何做的
Java为什么要推出HashMap，它是如何解决hash冲突的
JVM内存分配，编码时如何注意内存泄露
Binder机制原理

为什么重复造轮子，自己去设计一些框架的原因
如何保证线上项目的稳定性
自己之前做的项目的规模
聊了聊他们目前在做的项目



1.IO
2.手写数组实现队列
3.能不能动态add同一个布局
4.Handler机制
5.手写rxjava遍历数组
6.scheme协议
7.数组扩容
8.listview和recyclerview的区别
9.service
10.线程如何做到安全
11.aop思想
12.自由发挥
13.hashmap原理

Java 序列化就是指将对象转换为字节序列的过程
android进程间通信为什么要序列化数据？（Parcelable与Serializable）
   进程之间传递：我们必须将要传输的数据转换成能够在内存空间流通的形式。这个转化过程就叫做序列化和反序列化。
   数据可以持久保存下来
   网络传输

Activity之间传递数据为什么要序列化？


作者：wustor
链接：https://www.jianshu.com/p/91718de18979
來源：简书
简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。

https://www.jianshu.com/p/9ed2c2f2a52c


